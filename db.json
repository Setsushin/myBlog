{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/upyun.png","path":"images/upyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Obtain MAX or MIN values or indexes from any column or row.md","hash":"e2dc2c5fac635a26d56481995dd0113f049299fa","modified":1636459125904},{"_id":"source/_posts/fillna函数中axis字段的方向问题.md","hash":"5e3d97a880e7af97c2fce52eb03b792b824de44a","modified":1636459118776},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1635419096347},{"_id":"themes/keep/LICENSE","hash":"98b8bd28e54ab36ee12396687dfdf88807c6cfdd","modified":1635419096347},{"_id":"themes/keep/README.md","hash":"d98baf3223795c0c2faea57c471fc2af9336cef1","modified":1635419096347},{"_id":"themes/keep/README_zh-CN.md","hash":"77e024325df8ab87114408cc31c8624edb0f5022","modified":1635419096347},{"_id":"themes/keep/README_zh-TW.md","hash":"106577079fbd01a52ddb7d65fe25bf4c7f9942cd","modified":1635419096347},{"_id":"themes/keep/_config.yml","hash":"143401c6df292a123a9e103fb8c29ccd2b1710a4","modified":1635435455981},{"_id":"themes/keep/package.json","hash":"24c346a8637543d59c78479d3adf88c0a7b729c1","modified":1635419096351},{"_id":"themes/keep/languages/en.yml","hash":"e4f42cfda0ed6ea1715d28fd4b1bba6f89b8cdb0","modified":1635419096347},{"_id":"themes/keep/languages/zh-CN.yml","hash":"de8aec3e9960fa489c0a290cda825dfc1e7528dd","modified":1635419096347},{"_id":"themes/keep/languages/zh-TW.yml","hash":"c6be2adec90f8c5d0a93a9f8d7bfb5fac0af4786","modified":1635419096347},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1635419096351},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1635419096351},{"_id":"themes/keep/layout/article-content.ejs","hash":"ae9fc0712b89af58e80b6c6daf749d01624c4a3c","modified":1635419096351},{"_id":"themes/keep/layout/category-content.ejs","hash":"aef0c90a395f909be7d2c358eb41d5558a10406f","modified":1635419096351},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1635419096351},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1635419096351},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1635419096351},{"_id":"themes/keep/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1635419096351},{"_id":"themes/keep/layout/layout.ejs","hash":"da9dbeba541ad19fed35c41fe187f4016e41f0db","modified":1635419096351},{"_id":"themes/keep/layout/page.ejs","hash":"4bf34f19bcf18efb5f6e76fcbe7cd36b25ceee6a","modified":1635419096351},{"_id":"themes/keep/layout/tag-content.ejs","hash":"ce4c8192a4ccd6a626af412a7ba258d1edbc0b95","modified":1635419096351},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1635419096351},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1635419096351},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1635419096351},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1635419096347},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1635419096347},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"54f77621034e39809911a184f15006ce80e0f67b","modified":1635419096347},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"106683de71f01b368c6f0c5417952b54fcdc9611","modified":1635419096347},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"9933e83e6e1022f4c27722f94a8b1540414b2570","modified":1635419096347},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"fe35aa6dabeb31bc677270062eed569f37472c2c","modified":1635419096351},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"4c68f6750fc179368ca5556d80fb1781ba984ff8","modified":1635419096351},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"627dfa9519ff614d6a79dac942a7b61fa5bfac8c","modified":1635419096351},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"0aceb1c7c29b65bd5fc2d79a285a564da8c09b63","modified":1635419096351},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1635419096351},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"6fbcc0a14467da8362a2eaa490d84acb1336d21b","modified":1635419096351},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"8fd596f871326b03e707d7defcc96f639cdd628e","modified":1635419096351},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1635419096351},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"e8a303fa393a1716c5ff1f731923781eb12322ab","modified":1635419096351},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"44af04816b86546e0260e73c2df61353e7404208","modified":1635419096351},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ad75de7966c4d9d923c9ac8cfbfe26b38fbe7aed","modified":1635419096351},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"e55d2034d7e2b8b0c1bd5ac7fdc56ffb8bbd4e60","modified":1635419096351},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"5968618b53a029922f2255b0c76bf8a9f11712ff","modified":1635419096351},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1635419096351},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"7a8fd4996b9720c8d4cdb3042bfe5a1008f7c5fd","modified":1635419096351},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1635419096351},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"e7c5417a1cd61f0b7c3f97030d4a77419c41b8a5","modified":1635419096351},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"9d657770648def555884eebbcecbf333e405ff8b","modified":1635419096351},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1635419096351},{"_id":"themes/keep/source/css/style.styl","hash":"e0c2fd781ee3de12716d6a54dd0f9f5ffe443334","modified":1635419096355},{"_id":"themes/keep/source/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1635419096355},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1635419096355},{"_id":"themes/keep/source/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1635419096355},{"_id":"themes/keep/source/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1635419096355},{"_id":"themes/keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1635419096355},{"_id":"themes/keep/source/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1635419096355},{"_id":"themes/keep/source/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1635419096355},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1635419096355},{"_id":"themes/keep/source/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1635419096355},{"_id":"themes/keep/source/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1635419096355},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1635419096355},{"_id":"themes/keep/source/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1635419096355},{"_id":"themes/keep/source/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1635419096355},{"_id":"themes/keep/source/js/utils.js","hash":"f6202d352b1f3afc0a93c8ff8f85b78526a1c31d","modified":1635419096355},{"_id":"themes/keep/source/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1635419096355},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1635419096367},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"4a7294bbe9aa4be22878e8a638668ed7ade25e2c","modified":1635419096347},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1635419096347},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"92d858874543c4ba149acd04374d84e784ba0aaf","modified":1635419096347},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"467cafd412837af791b4c353646cf44ac4458a3f","modified":1635419096347},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"949d3fdd4bd215cd7d0c95152c4be630ce227e16","modified":1635419096351},{"_id":"themes/keep/source/css/common/animated.styl","hash":"ceb35da27937a5824dea00c0a75de57e10e1dc90","modified":1635419096351},{"_id":"themes/keep/source/css/common/basic.styl","hash":"6d6132527247635f7406d6917cfc8e1cb02d8573","modified":1635419096351},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"9b6bf080299102571a6667ca99a62f53c9684246","modified":1635419096351},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"55c6c0f77b608b8e1d9c52bb4fdcee881f55eff8","modified":1635419096351},{"_id":"themes/keep/source/css/common/variables.styl","hash":"8b66a8ae90dbb8ec2e412fcf57ff6c8cee18e949","modified":1635419096351},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"515ebe2a251f3b53f0cf130cdc48b8bb1fb85952","modified":1635419096355},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"327bb874968feaa981093c3f218b48aa34cd1d44","modified":1635419096355},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"638c3b50d8203c76106f3010fbfeed9a29bfde5c","modified":1635419096355},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"bea0a03fe3de16ed08e7b3b541a46d2074561841","modified":1635419096355},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"2f2ee2f70020cf5e2ffb5612607bd58772e785a4","modified":1635419096355},{"_id":"themes/keep/source/css/layout/page.styl","hash":"ea83a6a5503b63d91d71221699776c4fe2c7a941","modified":1635419096355},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"0d1cc0cc0d263f55b9c7245c1dc023abdcfcd69f","modified":1635419096355},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1635419096355},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1635419096355},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"fd81f8a76ae4f55bf5da38116bbc4f0e973daad2","modified":1635419096351},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"1edcb0ece1bf4b9838c1937e98eaa845de7f4b3b","modified":1635419096351},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"64ea39fa5503f6c5a21a9ed7c9d3d5103cccad5a","modified":1635419096351},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"95c41684691a849d102c5a30efb365300d3d5c6d","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"6eaa067231bd9e9faa5de2260b8974142faae510","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"91bf4f2f58217c0d0c6d51ad4792e5e0a00c3165","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"d73c088e639d2d4e076552ff92e611682ce2380b","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"19a8fc0a01bf1efed637e90530c412d57137dfc4","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"80cd9c8abd3542c0e521841137e987a658471e05","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"59525fcc1f88c78abf8c1f0b06e24b16a088698c","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"98aa2e22f16b98b2ffdbf36e1ea24363f8e5045b","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"27d1e19691867a09283facd2983afb9a3404e999","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"da5df38b09138af28cb8b3fe9a05aeda9dae5011","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"f78a13e3b03b19cb72b03db0a5659f8c734e742e","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"a64df5515c60a3a0993c427dc50facee33215f2b","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a68a1e3f21da63ee2d387035e91f9f60e956e234","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"61016e73c8e420c74800b3afdbd6c2f890400e51","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"029ac31a21203a8b86027e67a3ff3a977579325d","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"f6d9a37520566e38738fc1184ed76817273c3ee5","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b8fccd13e2753c9fe891fb88a6413087048ab830","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"5844874c50a93239031e58b23856698ca9af2725","modified":1635419096355},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"6b0c7d69fc3f819610576b41e987ec655411ca44","modified":1635419096355},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1635419096383},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1635419096383},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1635419096359},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1635419096367},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1635419096371},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1635419096379},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1635419096363},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1635419096379},{"_id":"public/search.json","hash":"389c284fa96791ca56c24450fc3ffd79954320e8","modified":1636458593937},{"_id":"public/2021/10/29/Obtain MAX or MIN values or indexes from any column or row/index.html","hash":"e5e208920bddbf76d6e9926e41b97f938c92ab72","modified":1635952464616},{"_id":"public/2021/10/29/fillna函数中axis字段的方向问题/index.html","hash":"f87d051267ae342f2d7c1a5aa552022ff73be3f1","modified":1635436476708},{"_id":"public/archives/index.html","hash":"f4f04766e6f854cbe095bae9c057c544668367aa","modified":1636458593937},{"_id":"public/archives/2021/index.html","hash":"1f9e3336103d3a43a5fd522c96a576487fb4d206","modified":1636458593937},{"_id":"public/archives/2021/10/index.html","hash":"351d0fbec4cbded752af69d08f9c4f08ceefca9d","modified":1636458593937},{"_id":"public/categories/Technologies/index.html","hash":"1db624b3178b6f03eb6b9c3acc50ebb7de21989f","modified":1635952464616},{"_id":"public/index.html","hash":"15fd0144bd561d3fde681f6a5ed340d52850ec78","modified":1636458593937},{"_id":"public/tags/Python/index.html","hash":"a65885457f24978cb9823e2d5c97eb5e6f2f5b4d","modified":1635436476708},{"_id":"public/tags/Pandas/index.html","hash":"e34f747e451482dcebc03e56cde1cd21740b9cd6","modified":1635436476708},{"_id":"public/tags/DataSciences/index.html","hash":"2bde79ca15086f3ed5219be2ae2da7d61e346a26","modified":1635436476708},{"_id":"public/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1635436476708},{"_id":"public/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1635436476708},{"_id":"public/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1635436476708},{"_id":"public/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1635436476708},{"_id":"public/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1635436476708},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1635436476708},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1635436476708},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1635436476708},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1635436476708},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1635436476708},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1635436476708},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1635436476708},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1635436476708},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1635436476708},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1635436476708},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1635436476708},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1635436476708},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1635436476708},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1635436476708},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1635436476708},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1635436476708},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1635436476708},{"_id":"public/js/utils.js","hash":"f6202d352b1f3afc0a93c8ff8f85b78526a1c31d","modified":1635436476708},{"_id":"public/css/common/animated.css","hash":"654c7588d80dc8b481a203e3071b3cedd41c7fde","modified":1635436476708},{"_id":"public/css/common/basic.css","hash":"55f95a3b9398ffbf11b8b39f264509e821df9e2e","modified":1635436476708},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1635436476708},{"_id":"public/css/common/markdown.css","hash":"8c9fb9f7fb403e76a4446a7e533ebe36dd702483","modified":1635436476708},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1635436476708},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1635436476708},{"_id":"public/css/layout/article-content.css","hash":"bb2e9b90086c4a014d0dbeb97cd0beedab27fe9c","modified":1635436476708},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1635436476708},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1635436476708},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1635436476708},{"_id":"public/css/layout/page.css","hash":"c9d5a1244b1a393ebf63412cf9ffef43ca48d64e","modified":1635436476708},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1635436476708},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1635436476708},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1635436476708},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1635436476708},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1635436476708},{"_id":"public/css/style.css","hash":"3cece5303d3920cd47d8505e2797e13473895943","modified":1635436476708},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1635436476708},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1635436476708},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1635436476708},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1635436476708},{"_id":"public/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1635436476708},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1635436476708},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1635436476708},{"_id":"public/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1635436476708},{"_id":"public/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1635436476708},{"_id":"source/_posts/The-fall-of-Kosugi.md","hash":"92903d0adf8bd8d9968bcbdf40370776b3274868","modified":1636459234350},{"_id":"source/_posts/Why you should always use \"guard\".md","hash":"e7939ad75f33c2583cc87f2a8dd0d07de01eae5c","modified":1636459228498},{"_id":"source/_posts/The-fall-of-Kosugi/kosugi (1).png","hash":"8b9f78841b254039738d461339d3be70c7a4d50c","modified":1635950872527},{"_id":"source/_posts/The-fall-of-Kosugi/kosugi (3).png","hash":"662535dde9f56db3d29ee806770b82cab68e7404","modified":1635950872645},{"_id":"source/_posts/The-fall-of-Kosugi/kosugi (2).png","hash":"d775ef6cff92637e8a243857504e36194a75c7bb","modified":1635950874213},{"_id":"source/_posts/The-fall-of-Kosugi/3.JPG","hash":"cc22dc526932493de69946feff91a139ef1249e7","modified":1635951921094},{"_id":"source/_posts/The-fall-of-Kosugi/1.JPG","hash":"44fdc9d0b5cf3a97aaaa6f4f691b7692bf7f5fbf","modified":1635951920899},{"_id":"source/_posts/The-fall-of-Kosugi/2.JPG","hash":"098b4027b61bcf4548da15bebae27de02617926f","modified":1635951921351},{"_id":"public/2021/11/03/The-fall-of-Kosugi/index.html","hash":"b76ba550a7e67db8543b15915bedcfa32e223e61","modified":1636458593937},{"_id":"public/2021/11/03/Why you should always use \"guard\"/index.html","hash":"abe1e715e7015976a2ff9469d612a7d2822797f4","modified":1635952464616},{"_id":"public/archives/2021/11/index.html","hash":"103f6e78a32621e1ca7273c160ee3c62d4c19e2d","modified":1636458593937},{"_id":"public/categories/Life/index.html","hash":"8d8c862b8aaaa162408a93fd94b6709fb4be2204","modified":1635952464616},{"_id":"public/tags/Programming/index.html","hash":"4fd36048e3e316a3de078006d15072d9c2f2d4b8","modified":1635952464616},{"_id":"public/tags/python/index.html","hash":"d1d87ceea0720cc93714b5d450421b4a60106c23","modified":1636458593937},{"_id":"public/2021/11/03/The-fall-of-Kosugi/3.JPG","hash":"cc22dc526932493de69946feff91a139ef1249e7","modified":1635952464616},{"_id":"public/2021/11/03/The-fall-of-Kosugi/1.JPG","hash":"44fdc9d0b5cf3a97aaaa6f4f691b7692bf7f5fbf","modified":1635952464616},{"_id":"public/2021/11/03/The-fall-of-Kosugi/2.JPG","hash":"098b4027b61bcf4548da15bebae27de02617926f","modified":1635952464616},{"_id":"source/_posts/expert-finder.md","hash":"45f05677cfc0104266b1fff6faa8312d96f7e73d","modified":1636459110975},{"_id":"source/_posts/expert_finder.py","hash":"e0c2637ad738fc3c03066d5f007a7ce91b0f5f88","modified":1636443831514},{"_id":"public/2021/11/09/expert-finder/index.html","hash":"a97e59538e02437bca739d7acd6ec641329d5911","modified":1636458593937},{"_id":"public/tags/SQL/index.html","hash":"1360f5c47598c2e948c3086a28db43ab555ceb19","modified":1636458593937},{"_id":"source/categories/index.md","hash":"2f730c138ebeababca3162b19b8ed4268ecd0f00","modified":1636458997797}],"Category":[{"name":"Technologies","_id":"ckvb4nhya0002y0jxan8v2cve"},{"name":"Life","_id":"ckvjnh2ov0002zyjx3fnm8efx"},{"name":"Daily life","_id":"ckvs1jed20002anjxfjorg311"}],"Data":[],"Page":[{"title":"categories","date":"2021-11-09T11:55:31.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-11-09 20:55:31\ntype: \"categories\"\ncomments: false\n---\n","updated":"2021-11-09T11:56:37.797Z","path":"categories/index.html","layout":"page","_id":"ckvs1h4uo0000anjxcwgae7hp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Obtain MAX/MIN values or indexes from any column/row","_content":"\nThis post introduces some common operations of obtaining MAX/MIN values or indexes from any column/row.\nYes, it's very basic. But reviewing is not bad, always.\n\nprevious:  \n_import pandas_  \n_df = pandas.dataframe(data)_  \n\nObtain the MAX/MIN value of one column:  \n```\ndf[‘column_name’].max()\ndf[‘column_name’].min()\n```\n\nObtain the MAX/MIN value indexes of one column:  \n```\ndf[‘column_name’].idxmax()\ndf[‘column_name’].idxmin()\n```\n\nYou need to use _loc/iloc_, if you want to deal from _\"row\"_:  \nObtain the MAX/MIN value of one row:  \n```\ndf.loc[‘row_name’].max()\ndf.loc[‘row_name’].min()\n```\nor:  \n```\ndf.iloc[row_index].max()\ndf.iloc[row_index].min()\n```\n\nObtain the MAX/MIN value indexes of one row:  \n```\ndf.loc[‘row_name’].idxmax()\ndf.loc[‘row_name’].idxmin()\n```\nor:  \n```\ndf.iloc[row_index].idxmax()\ndf.iloc[row_index].idxmin()\n```\n","source":"_posts/Obtain MAX or MIN values or indexes from any column or row.md","raw":"---\ntitle: Obtain MAX/MIN values or indexes from any column/row\ncategories: \n- Technologies\ntags:\n- Python\n- Pandas\n---\n\nThis post introduces some common operations of obtaining MAX/MIN values or indexes from any column/row.\nYes, it's very basic. But reviewing is not bad, always.\n\nprevious:  \n_import pandas_  \n_df = pandas.dataframe(data)_  \n\nObtain the MAX/MIN value of one column:  \n```\ndf[‘column_name’].max()\ndf[‘column_name’].min()\n```\n\nObtain the MAX/MIN value indexes of one column:  \n```\ndf[‘column_name’].idxmax()\ndf[‘column_name’].idxmin()\n```\n\nYou need to use _loc/iloc_, if you want to deal from _\"row\"_:  \nObtain the MAX/MIN value of one row:  \n```\ndf.loc[‘row_name’].max()\ndf.loc[‘row_name’].min()\n```\nor:  \n```\ndf.iloc[row_index].max()\ndf.iloc[row_index].min()\n```\n\nObtain the MAX/MIN value indexes of one row:  \n```\ndf.loc[‘row_name’].idxmax()\ndf.loc[‘row_name’].idxmin()\n```\nor:  \n```\ndf.iloc[row_index].idxmax()\ndf.iloc[row_index].idxmin()\n```\n","slug":"Obtain MAX or MIN values or indexes from any column or row","published":1,"date":"2021-11-09T11:58:45.900Z","updated":"2021-11-09T11:58:45.904Z","_id":"ckvb4nhxx0000y0jx16x66fmz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>This post introduces some common operations of obtaining MAX/MIN values or indexes from any column/row.<br>Yes, it’s very basic. But reviewing is not bad, always.</p>\n<p>previous:<br><em>import pandas</em><br><em>df = pandas.dataframe(data)</em>  </p>\n<p>Obtain the MAX/MIN value of one column:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[‘column_name’].max()</span><br><span class=\"line\">df[‘column_name’].min()</span><br></pre></td></tr></table></figure>\n\n<p>Obtain the MAX/MIN value indexes of one column:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[‘column_name’].idxmax()</span><br><span class=\"line\">df[‘column_name’].idxmin()</span><br></pre></td></tr></table></figure>\n\n<p>You need to use <em>loc/iloc</em>, if you want to deal from <em>“row”</em>:<br>Obtain the MAX/MIN value of one row:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.loc[‘row_name’].max()</span><br><span class=\"line\">df.loc[‘row_name’].min()</span><br></pre></td></tr></table></figure>\n<p>or:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.iloc[row_index].max()</span><br><span class=\"line\">df.iloc[row_index].min()</span><br></pre></td></tr></table></figure>\n\n<p>Obtain the MAX/MIN value indexes of one row:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.loc[‘row_name’].idxmax()</span><br><span class=\"line\">df.loc[‘row_name’].idxmin()</span><br></pre></td></tr></table></figure>\n<p>or:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.iloc[row_index].idxmax()</span><br><span class=\"line\">df.iloc[row_index].idxmin()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>This post introduces some common operations of obtaining MAX/MIN values or indexes from any column/row.<br>Yes, it’s very basic. But reviewing is not bad, always.</p>\n<p>previous:<br><em>import pandas</em><br><em>df = pandas.dataframe(data)</em>  </p>\n<p>Obtain the MAX/MIN value of one column:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[‘column_name’].max()</span><br><span class=\"line\">df[‘column_name’].min()</span><br></pre></td></tr></table></figure>\n\n<p>Obtain the MAX/MIN value indexes of one column:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[‘column_name’].idxmax()</span><br><span class=\"line\">df[‘column_name’].idxmin()</span><br></pre></td></tr></table></figure>\n\n<p>You need to use <em>loc/iloc</em>, if you want to deal from <em>“row”</em>:<br>Obtain the MAX/MIN value of one row:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.loc[‘row_name’].max()</span><br><span class=\"line\">df.loc[‘row_name’].min()</span><br></pre></td></tr></table></figure>\n<p>or:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.iloc[row_index].max()</span><br><span class=\"line\">df.iloc[row_index].min()</span><br></pre></td></tr></table></figure>\n\n<p>Obtain the MAX/MIN value indexes of one row:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.loc[‘row_name’].idxmax()</span><br><span class=\"line\">df.loc[‘row_name’].idxmin()</span><br></pre></td></tr></table></figure>\n<p>or:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.iloc[row_index].idxmax()</span><br><span class=\"line\">df.iloc[row_index].idxmin()</span><br></pre></td></tr></table></figure>\n"},{"title":"fillna函数中axis字段的方向问题","_content":"\n在使用Pandas时，如果想要填充某个dataframe中的缺失值NaN，可以使用fillna函数。  \nfillna函数有两个常用字段：method和axis。  \n如果用固定值填充，可以直接使用fillna(n)，其中n代表要使用的填充值。  \n如果要使用method，有两种可用方法：bfill/backfill和ffill/pad。其中：  \nbfill/backfill使用下一个有效值填充  \nffill/pad使用前一个有效值填充  \n\n例子如下：  \n使用pad方法填充reviews中的缺失值：  \n```\nreviews = pd.DataFrame([[np.nan, 2, np.nan, 0],\n                   [3, 4, np.nan, 1],\n                   [np.nan, np.nan, np.nan, 5],\n                   [np.nan, 3, np.nan, 4]],\n                  columns=list(\"ABCD\"))\n```\n\n按照逻辑，填充值应该来自于同一列，所以axis应该为1，对吗？让我们试试看：  \n```\nreviews.fillna(method = 'pad', axis = 1)\n```\n \n完全不对！让我们把axis换成0再试一次。  \n```\nreviews.fillna(method = 'pad', axis = 0)\n```\n \n正确的axis是0。实际上，如果我们去掉axis字段使用默认值，我们也会得到axis=0的结果。  \n\n所以，在fillna函数中：  \n默认或axis = 0：沿纵向获取有效值填充  \naxis = 1：沿横向获取有效值填充\n\n这里的axis可能并不是“获取数值的方向”，而是“填充数值的推进方向”。  \n比如axis=0时，数值填充是按列处理的，但在整体角度，推进方向是沿axis=0前进的。  \n这可能有点反直觉，但我们最好还是记住这件它。  \n\n","source":"_posts/fillna函数中axis字段的方向问题.md","raw":"---\ntitle: fillna函数中axis字段的方向问题\ncategories: \n- Technologies\ntags:\n- Python\n- Pandas\n---\n\n在使用Pandas时，如果想要填充某个dataframe中的缺失值NaN，可以使用fillna函数。  \nfillna函数有两个常用字段：method和axis。  \n如果用固定值填充，可以直接使用fillna(n)，其中n代表要使用的填充值。  \n如果要使用method，有两种可用方法：bfill/backfill和ffill/pad。其中：  \nbfill/backfill使用下一个有效值填充  \nffill/pad使用前一个有效值填充  \n\n例子如下：  \n使用pad方法填充reviews中的缺失值：  \n```\nreviews = pd.DataFrame([[np.nan, 2, np.nan, 0],\n                   [3, 4, np.nan, 1],\n                   [np.nan, np.nan, np.nan, 5],\n                   [np.nan, 3, np.nan, 4]],\n                  columns=list(\"ABCD\"))\n```\n\n按照逻辑，填充值应该来自于同一列，所以axis应该为1，对吗？让我们试试看：  \n```\nreviews.fillna(method = 'pad', axis = 1)\n```\n \n完全不对！让我们把axis换成0再试一次。  \n```\nreviews.fillna(method = 'pad', axis = 0)\n```\n \n正确的axis是0。实际上，如果我们去掉axis字段使用默认值，我们也会得到axis=0的结果。  \n\n所以，在fillna函数中：  \n默认或axis = 0：沿纵向获取有效值填充  \naxis = 1：沿横向获取有效值填充\n\n这里的axis可能并不是“获取数值的方向”，而是“填充数值的推进方向”。  \n比如axis=0时，数值填充是按列处理的，但在整体角度，推进方向是沿axis=0前进的。  \n这可能有点反直觉，但我们最好还是记住这件它。  \n\n","slug":"fillna函数中axis字段的方向问题","published":1,"date":"2021-11-09T11:58:38.772Z","updated":"2021-11-09T11:58:38.776Z","_id":"ckvb4nhy50001y0jx8o3o7ueq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在使用Pandas时，如果想要填充某个dataframe中的缺失值NaN，可以使用fillna函数。<br>fillna函数有两个常用字段：method和axis。<br>如果用固定值填充，可以直接使用fillna(n)，其中n代表要使用的填充值。<br>如果要使用method，有两种可用方法：bfill/backfill和ffill/pad。其中：<br>bfill/backfill使用下一个有效值填充<br>ffill/pad使用前一个有效值填充  </p>\n<p>例子如下：<br>使用pad方法填充reviews中的缺失值：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews = pd.DataFrame([[np.nan, 2, np.nan, 0],</span><br><span class=\"line\">                   [3, 4, np.nan, 1],</span><br><span class=\"line\">                   [np.nan, np.nan, np.nan, 5],</span><br><span class=\"line\">                   [np.nan, 3, np.nan, 4]],</span><br><span class=\"line\">                  columns=list(&quot;ABCD&quot;))</span><br></pre></td></tr></table></figure>\n\n<p>按照逻辑，填充值应该来自于同一列，所以axis应该为1，对吗？让我们试试看：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews.fillna(method = &#x27;pad&#x27;, axis = 1)</span><br></pre></td></tr></table></figure>\n<p>完全不对！让我们把axis换成0再试一次。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews.fillna(method = &#x27;pad&#x27;, axis = 0)</span><br></pre></td></tr></table></figure>\n<p>正确的axis是0。实际上，如果我们去掉axis字段使用默认值，我们也会得到axis=0的结果。  </p>\n<p>所以，在fillna函数中：<br>默认或axis = 0：沿纵向获取有效值填充<br>axis = 1：沿横向获取有效值填充</p>\n<p>这里的axis可能并不是“获取数值的方向”，而是“填充数值的推进方向”。<br>比如axis=0时，数值填充是按列处理的，但在整体角度，推进方向是沿axis=0前进的。<br>这可能有点反直觉，但我们最好还是记住这件它。  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>在使用Pandas时，如果想要填充某个dataframe中的缺失值NaN，可以使用fillna函数。<br>fillna函数有两个常用字段：method和axis。<br>如果用固定值填充，可以直接使用fillna(n)，其中n代表要使用的填充值。<br>如果要使用method，有两种可用方法：bfill/backfill和ffill/pad。其中：<br>bfill/backfill使用下一个有效值填充<br>ffill/pad使用前一个有效值填充  </p>\n<p>例子如下：<br>使用pad方法填充reviews中的缺失值：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews = pd.DataFrame([[np.nan, 2, np.nan, 0],</span><br><span class=\"line\">                   [3, 4, np.nan, 1],</span><br><span class=\"line\">                   [np.nan, np.nan, np.nan, 5],</span><br><span class=\"line\">                   [np.nan, 3, np.nan, 4]],</span><br><span class=\"line\">                  columns=list(&quot;ABCD&quot;))</span><br></pre></td></tr></table></figure>\n\n<p>按照逻辑，填充值应该来自于同一列，所以axis应该为1，对吗？让我们试试看：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews.fillna(method = &#x27;pad&#x27;, axis = 1)</span><br></pre></td></tr></table></figure>\n<p>完全不对！让我们把axis换成0再试一次。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reviews.fillna(method = &#x27;pad&#x27;, axis = 0)</span><br></pre></td></tr></table></figure>\n<p>正确的axis是0。实际上，如果我们去掉axis字段使用默认值，我们也会得到axis=0的结果。  </p>\n<p>所以，在fillna函数中：<br>默认或axis = 0：沿纵向获取有效值填充<br>axis = 1：沿横向获取有效值填充</p>\n<p>这里的axis可能并不是“获取数值的方向”，而是“填充数值的推进方向”。<br>比如axis=0时，数值填充是按列处理的，但在整体角度，推进方向是沿axis=0前进的。<br>这可能有点反直觉，但我们最好还是记住这件它。  </p>\n"},{"title":"The fall of Kosugi","date":"2021-11-03T14:56:16.000Z","_content":"\nそもそも秋ですね。\n小杉の秋めっちゃ綺麗！\n\n{% asset_img 1.JPG 小杉駅口 %}\n{% asset_img 2.JPG 新丸子駅口-1 %}\n{% asset_img 3.JPG 新丸子駅口-2 %}\n\n\n秋の気分たっぷりでしょう。\n","source":"_posts/The-fall-of-Kosugi.md","raw":"---\ntitle: The fall of Kosugi\ndate: 2021-11-03 23:56:16\ncategories: \n- Daily life\ntags:\n- Japan\n---\n\nそもそも秋ですね。\n小杉の秋めっちゃ綺麗！\n\n{% asset_img 1.JPG 小杉駅口 %}\n{% asset_img 2.JPG 新丸子駅口-1 %}\n{% asset_img 3.JPG 新丸子駅口-2 %}\n\n\n秋の気分たっぷりでしょう。\n","slug":"The-fall-of-Kosugi","published":1,"updated":"2021-11-09T12:00:34.350Z","_id":"ckvjnh2om0000zyjxcd1ieaml","comments":1,"layout":"post","photos":[],"link":"","content":"<p>そもそも秋ですね。<br>小杉の秋めっちゃ綺麗！</p>\n<img src=\"/2021/11/03/The-fall-of-Kosugi/1.JPG\" class=\"\" title=\"小杉駅口\">\n<img src=\"/2021/11/03/The-fall-of-Kosugi/2.JPG\" class=\"\" title=\"新丸子駅口-1\">\n<img src=\"/2021/11/03/The-fall-of-Kosugi/3.JPG\" class=\"\" title=\"新丸子駅口-2\">\n\n\n<p>秋の気分たっぷりでしょう。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>そもそも秋ですね。<br>小杉の秋めっちゃ綺麗！</p>\n<img src=\"/2021/11/03/The-fall-of-Kosugi/1.JPG\" class=\"\" title=\"小杉駅口\">\n<img src=\"/2021/11/03/The-fall-of-Kosugi/2.JPG\" class=\"\" title=\"新丸子駅口-1\">\n<img src=\"/2021/11/03/The-fall-of-Kosugi/3.JPG\" class=\"\" title=\"新丸子駅口-2\">\n\n\n<p>秋の気分たっぷりでしょう。</p>\n"},{"title":"Why you should always use \"guard\"","_content":"\nYou must ever been tormented by multiple nested _if-else_ statements, like following:  \n```\nif (case1):\n    if (case2):\n        if (case3):\n            do something\n\t\telse:\n\t\t    break\n```\n\nYes, for poor linear thinking of the programmer, it's very natural.  \nHowever, the fact is that even the author himself, he will forget all logics when he reviews after only a few days.  \nSo if you want to implement the above logic, it's strongly recommended to use \"gurad\", like this:  \n```\nif (not case1):\n\tbreak\nif (not case2):\n\tbreak\nif (not case3)\n\tbreak\ndo something\n```\nwhich makes everyone who is trying to continue working based on your codes happier.\n\n","source":"_posts/Why you should always use \"guard\".md","raw":"---\ntitle: Why you should always use \"guard\"\ncategories: \n- Technologies\ntags:\n- python\n---\n\nYou must ever been tormented by multiple nested _if-else_ statements, like following:  \n```\nif (case1):\n    if (case2):\n        if (case3):\n            do something\n\t\telse:\n\t\t    break\n```\n\nYes, for poor linear thinking of the programmer, it's very natural.  \nHowever, the fact is that even the author himself, he will forget all logics when he reviews after only a few days.  \nSo if you want to implement the above logic, it's strongly recommended to use \"gurad\", like this:  \n```\nif (not case1):\n\tbreak\nif (not case2):\n\tbreak\nif (not case3)\n\tbreak\ndo something\n```\nwhich makes everyone who is trying to continue working based on your codes happier.\n\n","slug":"Why you should always use \"guard\"","published":1,"date":"2021-11-09T12:00:28.494Z","updated":"2021-11-09T12:00:28.498Z","_id":"ckvjnh2or0001zyjxdu6navnn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>You must ever been tormented by multiple nested <em>if-else</em> statements, like following:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (case1):</span><br><span class=\"line\">    if (case2):</span><br><span class=\"line\">        if (case3):</span><br><span class=\"line\">            do something</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t    break</span><br></pre></td></tr></table></figure>\n\n<p>Yes, for poor linear thinking of the programmer, it’s very natural.<br>However, the fact is that even the author himself, he will forget all logics when he reviews after only a few days.<br>So if you want to implement the above logic, it’s strongly recommended to use “gurad”, like this:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (not case1):</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">if (not case2):</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">if (not case3)</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">do something</span><br></pre></td></tr></table></figure>\n<p>which makes everyone who is trying to continue working based on your codes happier.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>You must ever been tormented by multiple nested <em>if-else</em> statements, like following:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (case1):</span><br><span class=\"line\">    if (case2):</span><br><span class=\"line\">        if (case3):</span><br><span class=\"line\">            do something</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t    break</span><br></pre></td></tr></table></figure>\n\n<p>Yes, for poor linear thinking of the programmer, it’s very natural.<br>However, the fact is that even the author himself, he will forget all logics when he reviews after only a few days.<br>So if you want to implement the above logic, it’s strongly recommended to use “gurad”, like this:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (not case1):</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">if (not case2):</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">if (not case3)</span><br><span class=\"line\">\tbreak</span><br><span class=\"line\">do something</span><br></pre></td></tr></table></figure>\n<p>which makes everyone who is trying to continue working based on your codes happier.</p>\n"},{"title":"A SQL \"expert finder\" function","date":"2021-11-09T11:39:50.000Z","_content":"\n# Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.\n\nInputs:  \ntopic: A string with the topic of interest  \nclient: A Client object that specifies the connection to the Stack Overflow dataset  \n\nOutputs:  \nresults: A DataFrame with columns for _user\\_id_ and _number\\_of\\_answers_.  \n\n```Python\ndef expert_finder(topic, client):\n    my_query = \"\"\"\n               SELECT a.owner_user_id AS user_id, COUNT(1) AS number_of_answers\n               FROM `bigquery-public-data.stackoverflow.posts_questions` AS q\n               INNER JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a\n                   ON q.id = a.parent_Id\n               WHERE q.tags like '%{topic}%'\n               GROUP BY a.owner_user_id\n               ORDER BY number_of_answers DESC\n               \"\"\"\n\n    # Set up the query (a real service would have good error handling for \n    # queries that scan too much data)\n    safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)      \n    my_query_job = client.query(my_query, job_config=safe_config)\n\n    # API request - run the query, and return a pandas DataFrame\n    results = my_query_job.to_dataframe()\n    return results\n```\n    \n","source":"_posts/expert-finder.md","raw":"---\ntitle: A SQL \"expert finder\" function\ndate: 2021-11-09 20:39:50\ncategories: Technologies\ntags: \n- python\n- SQL\n---\n\n# Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.\n\nInputs:  \ntopic: A string with the topic of interest  \nclient: A Client object that specifies the connection to the Stack Overflow dataset  \n\nOutputs:  \nresults: A DataFrame with columns for _user\\_id_ and _number\\_of\\_answers_.  \n\n```Python\ndef expert_finder(topic, client):\n    my_query = \"\"\"\n               SELECT a.owner_user_id AS user_id, COUNT(1) AS number_of_answers\n               FROM `bigquery-public-data.stackoverflow.posts_questions` AS q\n               INNER JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a\n                   ON q.id = a.parent_Id\n               WHERE q.tags like '%{topic}%'\n               GROUP BY a.owner_user_id\n               ORDER BY number_of_answers DESC\n               \"\"\"\n\n    # Set up the query (a real service would have good error handling for \n    # queries that scan too much data)\n    safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)      \n    my_query_job = client.query(my_query, job_config=safe_config)\n\n    # API request - run the query, and return a pandas DataFrame\n    results = my_query_job.to_dataframe()\n    return results\n```\n    \n","slug":"expert-finder","published":1,"updated":"2021-11-09T11:58:30.975Z","_id":"ckvs10iv800009ojx7nemdov6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Returns-a-DataFrame-with-the-user-IDs-who-have-written-Stack-Overflow-answers-on-a-specific-topic\"><a href=\"#Returns-a-DataFrame-with-the-user-IDs-who-have-written-Stack-Overflow-answers-on-a-specific-topic\" class=\"headerlink\" title=\"Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.\"></a>Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.</h1><p>Inputs:<br>topic: A string with the topic of interest<br>client: A Client object that specifies the connection to the Stack Overflow dataset  </p>\n<p>Outputs:<br>results: A DataFrame with columns for <em>user_id</em> and <em>number_of_answers</em>.  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">expert_finder</span>(<span class=\"params\">topic, client</span>):</span></span><br><span class=\"line\">    my_query = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">               SELECT a.owner_user_id AS user_id, COUNT(1) AS number_of_answers</span></span><br><span class=\"line\"><span class=\"string\">               FROM `bigquery-public-data.stackoverflow.posts_questions` AS q</span></span><br><span class=\"line\"><span class=\"string\">               INNER JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a</span></span><br><span class=\"line\"><span class=\"string\">                   ON q.id = a.parent_Id</span></span><br><span class=\"line\"><span class=\"string\">               WHERE q.tags like &#x27;%&#123;topic&#125;%&#x27;</span></span><br><span class=\"line\"><span class=\"string\">               GROUP BY a.owner_user_id</span></span><br><span class=\"line\"><span class=\"string\">               ORDER BY number_of_answers DESC</span></span><br><span class=\"line\"><span class=\"string\">               &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Set up the query (a real service would have good error handling for </span></span><br><span class=\"line\">    <span class=\"comment\"># queries that scan too much data)</span></span><br><span class=\"line\">    safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=<span class=\"number\">10</span>**<span class=\"number\">10</span>)      </span><br><span class=\"line\">    my_query_job = client.query(my_query, job_config=safe_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># API request - run the query, and return a pandas DataFrame</span></span><br><span class=\"line\">    results = my_query_job.to_dataframe()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> results</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Returns-a-DataFrame-with-the-user-IDs-who-have-written-Stack-Overflow-answers-on-a-specific-topic\"><a href=\"#Returns-a-DataFrame-with-the-user-IDs-who-have-written-Stack-Overflow-answers-on-a-specific-topic\" class=\"headerlink\" title=\"Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.\"></a>Returns a DataFrame with the user IDs who have written Stack Overflow answers on a specific topic.</h1><p>Inputs:<br>topic: A string with the topic of interest<br>client: A Client object that specifies the connection to the Stack Overflow dataset  </p>\n<p>Outputs:<br>results: A DataFrame with columns for <em>user_id</em> and <em>number_of_answers</em>.  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">expert_finder</span>(<span class=\"params\">topic, client</span>):</span></span><br><span class=\"line\">    my_query = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">               SELECT a.owner_user_id AS user_id, COUNT(1) AS number_of_answers</span></span><br><span class=\"line\"><span class=\"string\">               FROM `bigquery-public-data.stackoverflow.posts_questions` AS q</span></span><br><span class=\"line\"><span class=\"string\">               INNER JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a</span></span><br><span class=\"line\"><span class=\"string\">                   ON q.id = a.parent_Id</span></span><br><span class=\"line\"><span class=\"string\">               WHERE q.tags like &#x27;%&#123;topic&#125;%&#x27;</span></span><br><span class=\"line\"><span class=\"string\">               GROUP BY a.owner_user_id</span></span><br><span class=\"line\"><span class=\"string\">               ORDER BY number_of_answers DESC</span></span><br><span class=\"line\"><span class=\"string\">               &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Set up the query (a real service would have good error handling for </span></span><br><span class=\"line\">    <span class=\"comment\"># queries that scan too much data)</span></span><br><span class=\"line\">    safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=<span class=\"number\">10</span>**<span class=\"number\">10</span>)      </span><br><span class=\"line\">    my_query_job = client.query(my_query, job_config=safe_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># API request - run the query, and return a pandas DataFrame</span></span><br><span class=\"line\">    results = my_query_job.to_dataframe()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> results</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/The-fall-of-Kosugi/1.JPG","slug":"1.JPG","post":"ckvjnh2om0000zyjxcd1ieaml","modified":0,"renderable":0},{"_id":"source/_posts/The-fall-of-Kosugi/2.JPG","slug":"2.JPG","post":"ckvjnh2om0000zyjxcd1ieaml","modified":0,"renderable":0},{"_id":"source/_posts/The-fall-of-Kosugi/3.JPG","slug":"3.JPG","post":"ckvjnh2om0000zyjxcd1ieaml","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckvb4nhxx0000y0jx16x66fmz","category_id":"ckvb4nhya0002y0jxan8v2cve","_id":"ckvb4nhyi0006y0jxd9z3cxxp"},{"post_id":"ckvb4nhy50001y0jx8o3o7ueq","category_id":"ckvb4nhya0002y0jxan8v2cve","_id":"ckvb4nhyi0008y0jx4i71fone"},{"post_id":"ckvjnh2or0001zyjxdu6navnn","category_id":"ckvb4nhya0002y0jxan8v2cve","_id":"ckvjnh2oz0004zyjxemkng8yc"},{"post_id":"ckvs10iv800009ojx7nemdov6","category_id":"ckvb4nhya0002y0jxan8v2cve","_id":"ckvs1i1wl0001anjx8adeb863"},{"post_id":"ckvjnh2om0000zyjxcd1ieaml","category_id":"ckvs1jed20002anjxfjorg311","_id":"ckvs1jed70005anjx4i6m7e5c"}],"PostTag":[{"post_id":"ckvb4nhxx0000y0jx16x66fmz","tag_id":"ckvb4nhyc0003y0jx39irc81l","_id":"ckvb4nhyj000ay0jx37y56a17"},{"post_id":"ckvb4nhxx0000y0jx16x66fmz","tag_id":"ckvb4nhyg0005y0jxa5px3vsi","_id":"ckvb4nhyj000by0jxfz1qa8tj"},{"post_id":"ckvb4nhy50001y0jx8o3o7ueq","tag_id":"ckvb4nhyc0003y0jx39irc81l","_id":"ckvb4nhyl000fy0jx3ep4dhky"},{"post_id":"ckvb4nhy50001y0jx8o3o7ueq","tag_id":"ckvb4nhyg0005y0jxa5px3vsi","_id":"ckvb4nhyl000gy0jxh6fr0ig6"},{"post_id":"ckvjnh2or0001zyjxdu6navnn","tag_id":"ckvjnh2p00005zyjx0mc42hb8","_id":"ckvjnh2p10008zyjxduuzb3q2"},{"post_id":"ckvs10iv800009ojx7nemdov6","tag_id":"ckvjnh2p00005zyjx0mc42hb8","_id":"ckvs10ivh00029ojx9f1q243g"},{"post_id":"ckvs10iv800009ojx7nemdov6","tag_id":"ckvs10ivd00019ojx1oate1hv","_id":"ckvs10ivh00039ojxhdgt7g7f"},{"post_id":"ckvjnh2om0000zyjxcd1ieaml","tag_id":"ckvs1jed40003anjx1bwq3jm1","_id":"ckvs1jed60004anjxar836oh5"}],"Tag":[{"name":"Python","_id":"ckvb4nhyc0003y0jx39irc81l"},{"name":"Pandas","_id":"ckvb4nhyg0005y0jxa5px3vsi"},{"name":"DataSciences","_id":"ckvb4nhyi0007y0jx0hue8dkd"},{"name":"Programming","_id":"ckvjnh2oy0003zyjx7sn5aygh"},{"name":"python","_id":"ckvjnh2p00005zyjx0mc42hb8"},{"name":"SQL","_id":"ckvs10ivd00019ojx1oate1hv"},{"name":"Japan","_id":"ckvs1jed40003anjx1bwq3jm1"}]}}